---
import Layout from '../../layouts/Layout.astro';
import projectsData from '../../data/projects.json';
import type { GetStaticPaths } from 'astro';
import fs from 'node:fs/promises';
import path from 'node:path';
import { marked } from 'marked';

// Configurar marked para permitir HTML
const renderer = new marked.Renderer();
marked.setOptions({
  renderer: renderer,
  gfm: true,
  breaks: true,
  pedantic: false,
  silent: false,
  hooks: undefined
});

export const getStaticPaths = (async () => {
  const project = await Promise.all(
    projectsData.map(async (project) => {
      // Leer el archivo markdown correspondiente
      const mdPath = path.join(process.cwd(), 'src/content/project', `${project.slug}.md`);
      let content = '';
      
      try {
        const mdContent = await fs.readFile(mdPath, 'utf-8');
        // Eliminar el frontmatter
        const contentWithoutFrontmatter = mdContent.replace(/^---\n.*?\n---\n/s, '');
        content = await marked.parse(contentWithoutFrontmatter); // Convertir MD a HTML
      } catch (error) {
        console.error(`Error leyendo markdown para ${project.slug}:`, error);
      }

      return {
        params: { slug: project.slug },
        props: { project, content }
      };
    })
  );

  return project;
}) satisfies GetStaticPaths;

const { project, content } = Astro.props;
---

<Layout title={project.title}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-4">{project.title}</h1>
    
    {project.tags && (
      <div class="flex gap-2 mb-6">
        {project.tags.map(tag => (
          <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-full text-sm">
            {tag}
          </span>
        ))}
      </div>
    )}

    <!-- Contenido con estilos mejorados -->
    <div 
      class="prose dark:prose-invert max-w-none mb-8 
        prose-img:rounded-lg prose-img:w-full
        prose-video:w-full prose-video:rounded-lg
        prose-iframe:w-full prose-iframe:rounded-lg"
      set:html={content}
    />

    <div class="flex gap-4">
      {project.link && (
        <a 
          href={project.link.href}
          target="_blank"
          rel="noopener noreferrer"
          class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
        >
          {project.link.text}
        </a>
      )}
    </div>
  </article>
</Layout>

<style>
  /* Estilos adicionales para el contenido */
  /* :global(.prose video),
  :global(.prose iframe) {
    @apply my-8;
  }

  :global(.prose pre) {
    @apply p-4 rounded-lg bg-gray-800 text-white overflow-x-auto;
  }

  :global(.prose code) {
    @apply text-sm;
  }

  :global(.prose img) {
    @apply my-8;
  } */
</style>